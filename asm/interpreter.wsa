; An interpreter for Whitespace, written in Whitespace
; The input should be the Whitespace program, terminated with a QUIT
; This code is partially auto-generated by a Python script I've yet to upload
read_instructions:
    push 0
    read_instructions.loop:
    call read_inst
    dup
    push -1
    sub
    jz finished_reading
    copy 1
    push 2
    mul
    push 20
    add
    swap
    store
    dup
    push 2
    mul
    push 21
    add
    push 1
    load
    store
    push 1
    add
    jump read_instructions.loop
getc_:
    push 0
    dup
    rchar
    load
    ret
getc:
    call getc_
    dup
    push 'Q'
    sub
    jz getc.Q
    jump getc.try_ret
    getc.Q:
    pop
    call getc_
    dup
    push 'U'
    sub
    jz getc.U
    jump getc.try_ret
    getc.U:
    pop
    call getc_
    dup
    push 'I'
    sub
    jz getc.I
    jump getc.try_ret
    getc.I:
    pop
    call getc_
    dup
    push 'T'
    sub
    jz getc.finished_reading
    getc.try_ret:
    dup
    push ' '
    sub
    jz getc.ret
    dup
    push '\t'
    sub
    jz getc.ret
    dup
    push '\n'
    sub
    jz getc.ret
    pop
    jump getc
    getc.finished_reading:
    pop
    push -1
    getc.ret:
    ret
read_inst:
    call getc
    dup
    push '\n'
    sub
    jz read_inst.L
    dup
    push ' '
    sub
    jz read_inst.S
    dup
    push '\t'
    sub
    jz read_inst.T
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.L:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.LL
    dup
    push ' '
    sub
    jz read_inst.LS
    dup
    push '\t'
    sub
    jz read_inst.LT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.LL:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.LLL
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.LLL:
    pop
    push 21
    ret
    read_inst.LS:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.LSL
    dup
    push ' '
    sub
    jz read_inst.LSS
    dup
    push '\t'
    sub
    jz read_inst.LST
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.LSL:
    pop
    push 17
    call read_label-or-num
    ret
    read_inst.LSS:
    pop
    push 15
    call read_label-or-num
    ret
    read_inst.LST:
    pop
    push 16
    call read_label-or-num
    ret
    read_inst.LT:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.LTL
    dup
    push ' '
    sub
    jz read_inst.LTS
    dup
    push '\t'
    sub
    jz read_inst.LTT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.LTL:
    pop
    push 20
    ret
    read_inst.LTS:
    pop
    push 18
    call read_label-or-num
    ret
    read_inst.LTT:
    pop
    push 19
    call read_label-or-num
    ret
    read_inst.S:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.SL
    dup
    push ' '
    sub
    jz read_inst.SS
    dup
    push '\t'
    sub
    jz read_inst.ST
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.SL:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.SLL
    dup
    push ' '
    sub
    jz read_inst.SLS
    dup
    push '\t'
    sub
    jz read_inst.SLT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.SLL:
    pop
    push 7
    ret
    read_inst.SLS:
    pop
    push 5
    ret
    read_inst.SLT:
    pop
    push 6
    ret
    read_inst.SS:
    pop
    push 4
    call read_label-or-num
    ret
    read_inst.ST:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.STL
    dup
    push ' '
    sub
    jz read_inst.STS
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.STL:
    pop
    push 9
    call read_label-or-num
    ret
    read_inst.STS:
    pop
    push 8
    call read_label-or-num
    ret
    read_inst.T:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.TL
    dup
    push ' '
    sub
    jz read_inst.TS
    dup
    push '\t'
    sub
    jz read_inst.TT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TL:
    pop
    call getc
    dup
    push ' '
    sub
    jz read_inst.TLS
    dup
    push '\t'
    sub
    jz read_inst.TLT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TLS:
    pop
    call getc
    dup
    push ' '
    sub
    jz read_inst.TLSS
    dup
    push '\t'
    sub
    jz read_inst.TLST
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TLSS:
    pop
    push 2
    ret
    read_inst.TLST:
    pop
    push 3
    ret
    read_inst.TLT:
    pop
    call getc
    dup
    push ' '
    sub
    jz read_inst.TLTS
    dup
    push '\t'
    sub
    jz read_inst.TLTT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TLTS:
    pop
    push 0
    ret
    read_inst.TLTT:
    pop
    push 1
    ret
    read_inst.TS:
    pop
    call getc
    dup
    push ' '
    sub
    jz read_inst.TSS
    dup
    push '\t'
    sub
    jz read_inst.TST
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TSS:
    pop
    call getc
    dup
    push '\n'
    sub
    jz read_inst.TSSL
    dup
    push ' '
    sub
    jz read_inst.TSSS
    dup
    push '\t'
    sub
    jz read_inst.TSST
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TSSL:
    pop
    push 12
    ret
    read_inst.TSSS:
    pop
    push 10
    ret
    read_inst.TSST:
    pop
    push 11
    ret
    read_inst.TST:
    pop
    call getc
    dup
    push ' '
    sub
    jz read_inst.TSTS
    dup
    push '\t'
    sub
    jz read_inst.TSTT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TSTS:
    pop
    push 13
    ret
    read_inst.TSTT:
    pop
    push 14
    ret
    read_inst.TT:
    pop
    call getc
    dup
    push ' '
    sub
    jz read_inst.TTS
    dup
    push '\t'
    sub
    jz read_inst.TTT
    dup
    push -1
    sub
    jz read_inst.-1
    jump error
    read_inst.TTS:
    pop
    push 22
    ret
    read_inst.TTT:
    pop
    push 23
    ret
    read_inst.-1:
    ret
error:
    push 'A'
    wchar
    push 'n'
    wchar
    push ' '
    wchar
    push 'e'
    wchar
    push 'r'
    wchar
    push 'r'
    wchar
    push 'o'
    wchar
    push 'r'
    wchar
    push ' '
    wchar
    push 'o'
    wchar
    push 'c'
    wchar
    push 'c'
    wchar
    push 'u'
    wchar
    push 'r'
    wchar
    push 'r'
    wchar
    push 'e'
    wchar
    push 'd'
    wchar
    push '\n'
    wchar
    end
read_label-or-num:
    push 0
    call getc
    dup
    push '\t'
    sub
    jz read_label-or-num.neg-init
    dup
    push ' '
    sub
    jz read_label-or-num.pos-init
    jump read_label-or-num.ret
    read_label-or-num.neg-init:
    pop
    read_label-or-num.neg:
    call getc
    dup
    push '\n'
    sub
    jz read_label-or-num.ret
    push '\t'
    sub
    jz read_label-or-num.neg-1
    push 2
    mul
    jump read_label-or-num.neg
    read_label-or-num.neg-1:
    push 2
    mul
    push 1
    sub
    jump read_label-or-num.neg
    read_label-or-num.pos-init:
    pop
    read_label-or-num.pos:
    call getc
    dup
    push '\n'
    sub
    jz read_label-or-num.ret
    push '\t'
    sub
    jz read_label-or-num.pos-1
    push 2
    mul
    jump read_label-or-num.pos
    read_label-or-num.pos-1:
    push 2
    mul
    push 1
    add
    jump read_label-or-num.pos
    read_label-or-num.ret:
    pop
    push 1
    swap
    store
    ret
finished_reading:
    pop
    push 2
    copy 1
    store
    push 5
    push 200000
    store
    push 2
    mul
    push 19
    add
    push 20
    push 100000
    finished_reading.collect-marks:
    copy 2
    copy 2
    sub
    jn finished_reading.collect-marks-end
    copy 1
    load
    push 15
    sub
    jz finished_reading.have_mark
    jump finished_reading.collect-incr
    finished_reading.have_mark:
    dup
    copy 2
    push 1
    add
    load
    store
    push 1
    add
    dup
    copy 2
    store
    push 1
    add
    finished_reading.collect-incr:
    swap
    push 2
    add
    swap
    jump finished_reading.collect-marks
    finished_reading.collect-marks-end:
    push 100000
    sub
    push 2
    div
    push 6
    swap
    store
    pop
    push 20
    finished_reading.rewrite-labels:
    copy 1
    copy 1
    sub
    jn finished_reading.end
    dup
    load
    dup
    push 16
    sub
    jz finished_reading.rewrite-label
    dup
    push 17
    sub
    jz finished_reading.rewrite-label
    dup
    push 18
    sub
    jz finished_reading.rewrite-label
    dup
    push 19
    sub
    jz finished_reading.rewrite-label
    jump finished_reading.rewrite-labels_incr
    finished_reading.rewrite-label:
    copy 1
    push 1
    add
    dup
    load
    call relabel
    store
    finished_reading.rewrite-labels_incr:
    pop
    push 2
    add
    jump finished_reading.rewrite-labels
    finished_reading.end:
    pop
    pop
    jump simulate
relabel:
    push 100000
    relabel.loop:
    dup
    load
    copy 2
    sub
    jz relabel.found-label
    push 2
    add
    jump relabel.loop
    relabel.found-label:
    push 1
    add
    load
    slide 1
    ret
simulate:
    push 5
    push 200000
    store
    push 100000
    push 20
    simulate.handle_inst:
    push 2
    load
    push 2
    mul
    push 19
    add
    copy 1
    sub
    jn end
    dup
    load
    dup
    push 0
    sub
    jz simulate.rchar_eq__0
    jump simulate.rchar_neq__0
    simulate.rchar_eq__0:
    pop
    swap
    push 1
    sub
    swap
    copy 1
    push 1
    add
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    dup
    jn error-heap-underflow
    push 300000
    add
    rchar
    jump simulate.handle_inst-incr
    simulate.rchar_neq__0:
    dup
    push 1
    sub
    jz simulate.rnum_eq__1
    jump simulate.rnum_neq__1
    simulate.rnum_eq__1:
    pop
    swap
    push 1
    sub
    swap
    copy 1
    push 1
    add
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    dup
    jn error-heap-underflow
    push 300000
    add
    rnum
    jump simulate.handle_inst-incr
    simulate.rnum_neq__1:
    dup
    push 2
    sub
    jz simulate.wchar_eq__2
    jump simulate.wchar_neq__2
    simulate.wchar_eq__2:
    pop
    swap
    push 1
    sub
    swap
    copy 1
    push 1
    add
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    wchar
    jump simulate.handle_inst-incr
    simulate.wchar_neq__2:
    dup
    push 3
    sub
    jz simulate.wnum_eq__3
    jump simulate.wnum_neq__3
    simulate.wnum_eq__3:
    pop
    swap
    push 1
    sub
    swap
    copy 1
    push 1
    add
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    wnum
    jump simulate.handle_inst-incr
    simulate.wnum_neq__3:
    dup
    push 4
    sub
    jz simulate.push_eq__4
    jump simulate.push_neq__4
    simulate.push_eq__4:
    pop
    swap
    copy 1
    push 1
    add
    load
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.push_neq__4:
    dup
    push 5
    sub
    jz simulate.dup_eq__5
    jump simulate.dup_neq__5
    simulate.dup_eq__5:
    pop
    swap
    dup
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.dup_neq__5:
    dup
    push 6
    sub
    jz simulate.swap_eq__6
    jump simulate.swap_neq__6
    simulate.swap_eq__6:
    pop
    push 11
    copy 2
    push 2
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    store
    push 10
    copy 2
    push 1
    sub
    load
    store
    copy 1
    push 1
    sub
    push 11
    load
    store
    copy 1
    push 2
    sub
    push 10
    load
    store
    jump simulate.handle_inst-incr
    simulate.swap_neq__6:
    dup
    push 7
    sub
    jz simulate.pop_eq__7
    jump simulate.pop_neq__7
    simulate.pop_eq__7:
    pop
    swap
    push 1
    sub
    swap
    jump simulate.handle_inst-incr
    simulate.pop_neq__7:
    dup
    push 8
    sub
    jz simulate.copy_eq__8
    jump simulate.copy_neq__8
    simulate.copy_eq__8:
    pop
    swap
    dup
    copy 2
    push 1
    add
    load
    sub
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.copy_neq__8:
    dup
    push 9
    sub
    jz simulate.slide_eq__9
    jump simulate.slide_neq__9
    simulate.slide_eq__9:
    pop
    swap
    dup
    copy 2
    push 1
    add
    load
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    swap
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    push 1
    sub
    swap
    store
    swap
    jump simulate.handle_inst-incr
    simulate.slide_neq__9:
    dup
    push 10
    sub
    jz simulate.add_eq__10
    jump simulate.add_neq__10
    simulate.add_eq__10:
    pop
    swap
    push 2
    sub
    dup
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    push 1
    add
    load
    add
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.add_neq__10:
    dup
    push 11
    sub
    jz simulate.sub_eq__11
    jump simulate.sub_neq__11
    simulate.sub_eq__11:
    pop
    swap
    push 2
    sub
    dup
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    push 1
    add
    load
    sub
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.sub_neq__11:
    dup
    push 12
    sub
    jz simulate.mul_eq__12
    jump simulate.mul_neq__12
    simulate.mul_eq__12:
    pop
    swap
    push 2
    sub
    dup
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    push 1
    add
    load
    mul
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.mul_neq__12:
    dup
    push 13
    sub
    jz simulate.div_eq__13
    jump simulate.div_neq__13
    simulate.div_eq__13:
    pop
    swap
    push 2
    sub
    dup
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    push 1
    add
    load
    div
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.div_neq__13:
    dup
    push 14
    sub
    jz simulate.mod_eq__14
    jump simulate.mod_neq__14
    simulate.mod_eq__14:
    pop
    swap
    push 2
    sub
    dup
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    copy 1
    push 1
    add
    load
    mod
    copy 1
    swap
    store
    push 1
    add
    swap
    jump simulate.handle_inst-incr
    simulate.mod_neq__14:
    dup
    push 16
    sub
    jz simulate.call_eq__15
    jump simulate.call_neq__15
    simulate.call_eq__15:
    pop
    dup
    push 5
    load
    swap
    store
    push 5
    dup
    load
    push 1
    add
    store
    push 1
    add
    load
    jump simulate.handle_inst
    simulate.call_neq__15:
    dup
    push 17
    sub
    jz simulate.jump_eq__16
    jump simulate.jump_neq__16
    simulate.jump_eq__16:
    pop
    simulate.jump:
    push 1
    add
    load
    jump simulate.handle_inst
    simulate.jump_neq__16:
    dup
    push 18
    sub
    jz simulate.jz_eq__17
    jump simulate.jz_neq__17
    simulate.jz_eq__17:
    pop
    swap
    push 1
    sub
    swap
    copy 1
    push 1
    add
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    jz simulate.jump
    jump simulate.handle_inst-incr
    simulate.jz_neq__17:
    dup
    push 19
    sub
    jz simulate.jn_eq__18
    jump simulate.jn_neq__18
    simulate.jn_eq__18:
    pop
    swap
    push 1
    sub
    swap
    copy 1
    push 1
    add
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    jn simulate.jump
    jump simulate.handle_inst-incr
    simulate.jn_neq__18:
    dup
    push 20
    sub
    jz simulate.ret_eq__19
    jump simulate.ret_neq__19
    simulate.ret_eq__19:
    pop
    pop
    push 5
    load
    push 1
    sub
    dup
    push 200000
    sub
    jn error-fstack-underflow
    push 5
    copy 1
    store
    load
    jump simulate.handle_inst-incr
    simulate.ret_neq__19:
    dup
    push 22
    sub
    jz simulate.store_eq__20
    jump simulate.store_neq__20
    simulate.store_eq__20:
    pop
    swap
    push 2
    sub
    dup
    dup
    push 100000
    sub
    jn error-stack-underflow
    load
    dup
    jn error-heap-underflow
    push 300000
    add
    copy 1
    push 1
    add
    load
    store
    swap
    jump simulate.handle_inst-incr
    simulate.store_neq__20:
    dup
    push 23
    sub
    jz simulate.load_eq__21
    jump simulate.load_neq__21
    simulate.load_eq__21:
    pop
    copy 1
    push 1
    sub
    dup
    push 100000
    sub
    jn error-stack-underflow
    dup
    load
    dup
    jn error-heap-underflow
    push 300000
    add
    load
    store
    jump simulate.handle_inst-incr
    simulate.load_neq__21:
    push 15
    sub
    jz simulate.handle_inst-incr
    jump end
    simulate.handle_inst-incr:
    push 2
    add
    jump simulate.handle_inst
error-stack-underflow:
    push 'E'
    wchar
    push 'r'
    wchar
    push 'r'
    wchar
    push 'o'
    wchar
    push 'r'
    wchar
    push ':'
    wchar
    push ' '
    wchar
    push 's'
    wchar
    push 't'
    wchar
    push 'a'
    wchar
    push 'c'
    wchar
    push 'k'
    wchar
    push ' '
    wchar
    push 'u'
    wchar
    push 'n'
    wchar
    push 'd'
    wchar
    push 'e'
    wchar
    push 'r'
    wchar
    push 'f'
    wchar
    push 'l'
    wchar
    push 'o'
    wchar
    push 'w'
    wchar
    push '\n'
    wchar
    end
error-fstack-underflow:
    push 'E'
    wchar
    push 'r'
    wchar
    push 'r'
    wchar
    push 'o'
    wchar
    push 'r'
    wchar
    push ':'
    wchar
    push ' '
    wchar
    push 'f'
    wchar
    push 'u'
    wchar
    push 'n'
    wchar
    push 'c'
    wchar
    push 't'
    wchar
    push 'i'
    wchar
    push 'o'
    wchar
    push 'n'
    wchar
    push ' '
    wchar
    push 's'
    wchar
    push 't'
    wchar
    push 'a'
    wchar
    push 'c'
    wchar
    push 'k'
    wchar
    push ' '
    wchar
    push 'e'
    wchar
    push 'm'
    wchar
    push 'p'
    wchar
    push 't'
    wchar
    push 'y'
    wchar
    push '\n'
    wchar
    end
error-heap-underflow:
    push 'E'
    wchar
    push 'r'
    wchar
    push 'r'
    wchar
    push 'o'
    wchar
    push 'r'
    wchar
    push ':'
    wchar
    push ' '
    wchar
    push 'n'
    wchar
    push 'e'
    wchar
    push 'g'
    wchar
    push 'a'
    wchar
    push 't'
    wchar
    push 'i'
    wchar
    push 'v'
    wchar
    push 'e'
    wchar
    push ' '
    wchar
    push 'h'
    wchar
    push 'e'
    wchar
    push 'a'
    wchar
    push 'p'
    wchar
    push ' '
    wchar
    push 'a'
    wchar
    push 'd'
    wchar
    push 'd'
    wchar
    push 'r'
    wchar
    push 'e'
    wchar
    push 's'
    wchar
    push 's'
    wchar
    push '\n'
    wchar
    end
end:
    end
